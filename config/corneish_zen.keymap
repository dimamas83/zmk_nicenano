/*
*
* Copyright (c) 2021 Darryl deHaan
* SPDX-License-Identifier: MIT
*
*/

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/rgb.h>

/ {
    chosen {
        zmk,physical-layout = &foostan_corne_6col_layout;

        // zmk,physical-layout = &foostan_corne_5col_layout;
    };
};

/ {
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            display-name = "QWERTY";

            // --------------------------------------------------------------------------------
            // |  TAB |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BSPC |
            // | CTRL |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
            // | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | ESC  |
            //                    | GUI | LWR | SPC |   | ENT | RSE  | ALT |

            bindings = <
&kp TAB    &kp Q  &kp W  &kp E     &kp R  &kp T        &kp Y    &kp U  &kp I         &kp O    &kp P     &kp BSPC
&kp LCTRL  &kp A  &kp S  &kp D     &kp F  &kp G        &kp H    &kp J  &kp K         &kp L    &kp SEMI  &kp SQT
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V  &kp B        &kp N    &kp M  &kp COMMA     &kp DOT  &kp FSLH  &kp ESC
                         &kp LGUI  &mo 1  &kp SPACE    &kp RET  &mo 2  &kp LEFT_ALT
            >;
        };

        lower_layer {
            display-name = "NUMBER";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BSPC |
            // | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
            // | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp N1     &kp N2              &kp N3    &kp N4            &kp N5          &kp N6         &kp N7    &kp N8        &kp N9           &kp N0     &kp BSPC
&kp LCTRL  &kp TILDE  &trans              &trans    &kp K_MUTE        &kp C_VOL_UP    &kp PAGE_UP    &kp HOME  &kp INSERT    &kp MINUS        &kp EQUAL  &kp CAPSLOCK
&kp LSHFT  &trans     &kp LA(LEFT_SHIFT)  &mo 3     &kp K_PLAY_PAUSE  &kp C_VOL_DN    &kp PAGE_DOWN  &kp END   &kp DELETE    &kp PRINTSCREEN  &trans     &kp ESCAPE
                                          &kp LGUI  &trans            &kp SPACE       &kp RET        &trans    &kp LEFT_ALT
            >;
        };

        raise_layer {
            display-name = "SYMBOL";

            // -----------------------------------------------------------------------------------------
            // |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BSPC |
            // | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
            // | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
            //                    | GUI |     | SPC |   | ENT |     | ALT |

            bindings = <
&kp TAB    &kp F1  &kp F2  &kp F3    &kp F4  &kp F5       &kp F6          &kp F7          &kp F8           &kp F9   &kp F10  &kp BSPC
&kp LCTRL  &trans  &trans  &trans    &trans  &trans       &trans          &kp UP_ARROW    &trans           &kp F11  &kp F12  &trans
&kp LSHFT  &trans  &trans  &trans    &trans  &trans       &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT_ARROW  &trans   &trans   &trans
                           &kp LGUI  &trans  &kp SPACE    &kp RET         &trans          &kp LEFT_ALT
            >;
        };

        layer_3 {
            bindings = <
&trans          &trans           &trans        &trans        &rgb_ug RGB_BRD  &rgb_ug RGB_BRI    &trans  &trans  &trans  &trans  &trans  &trans
&bt BT_CLR      &bt BT_SEL 0     &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_SEL 3     &bt BT_SEL 4       &trans  &trans  &trans  &trans  &trans  &trans
&rgb_ug RGB_ON  &rgb_ug RGB_OFF  &trans        &trans        &rgb_ug RGB_EFR  &rgb_ug RGB_EFF    &trans  &trans  &trans  &trans  &trans  &trans
                                               &trans        &trans           &trans             &trans  &trans  &trans
            >;
        };
    };
};
